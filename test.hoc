load_file("nrngui.hoc")
load_file("graph.ses")
begintemplate neuron
public soma, esyn
create soma
objref esyn
proc init(){
    soma {
	L = 30
	diam = 30
	nseg  = 10
	esyn = new Exp2Syn(0.5)
	/*
	insert hh_test
	gnabar_hh_test = 0.12
	*/
	
	insert GPeA
	gnabar_GPeA = 0.12//0.12//0.19
	
	gkdrbar_GPeA = 0.005//0.06
	gl_GPeA = 0.0003//0.0001
	gcatbar_GPeA = 0.0001//0.005
	gkcabar_GPeA = 0.002//0.004
	ena_GPeA = 55
	ek_GPeA = -70		
	el_GPeA = -50//-54.3
	eca_GPeA = 124
	
    }
    /*
    cai0_ca_ion = 5e-6
    cao0_ca_ion = 2
    ki0_k_ion = 105
    ko0_k_ion = 3
    nao0_na_ion = 108
    nai0_na_ion = 10
    */
}

endtemplate neuron

objref Hneuron[2]

Hneuron[0] = new neuron()
Hneuron[1] = new neuron()



objref nil
objref record_list
record_list = new List()
Hneuron[0].soma record_list.append(new NetCon(&v(0.5),nil,0.0,0,1))
Hneuron[1].soma record_list.append(new NetCon(&v(0.5),nil,0.0,0,1))


objectvar stim2[2]
objref nclist, nc
nclist = new List()
for i=0, 1 {
    Hneuron[i].soma{
	//stim2[i] = new GaussianNoise(0.5)
	//stim2[i] = new PoissonNoise(0.5)
	stim2[i] = new GammaNoise(0.5)
	//stim2[i] = new IClamp(0.5)
	stim2[i].del = 0
	stim2[i].dur = 100000
	stim2[i].amp = 0.065
	nc = new NetCon(stim2[i],Hneuron[i].esyn,0.0,0,0.002)
	nclist.append(nc)
    }
}


/*
objref stim
stim = new NetStim()
stim.start = 20
stim.interval = 40
stim.number = 5
stim.noise = 0

objref nclist2
nclist2 = new List()
nclist2.append(new NetCon(stim, Hneuron[0].esyn,0.0,0,0.02))


objref stim2
stim2 = new NetStim()
stim2.start = 25
stim2.interval = 30
stim2.number = 6
stim2.noise = 0

//objref nclist3
//nclist3 = new List()
nclist2.append(new NetCon(stim2,Hneuron[1].esyn,0.0,0,0.02))
*/

objref tvec, idvec
tvec = new Vector()
idvec = new Vector()
record_list.object(0).record(tvec,idvec)
record_list.object(1).record(tvec,idvec)

objref rect, recv
rect = new Vector()
recv = new Vector()

rect.record(&t)
recv.record(&Hneuron[0].soma.v(0.5))

tstop = 30000.025//100000//230
dt = 0.025
run()

objref savv
savv = new File()

savv.wopen("volt.dat")
//savv.printf("t Hneuron[0].soma.v(0.5)\n")
//savv.printf("%d\n",rect.size())
for i=0,rect.size()-1 {
    savv.printf("%g %g\n",rect.x(i),recv.x(i))
}
savv.close()

objref savSpike
savSpike = new File()

savSpike.wopen("spike.dat")

for i=0, tvec.size()-1 {
    savSpike.printf("%g %g\n",tvec.x(i), idvec.x(i))
}
a = tvec.size()*1000.0/(tstop*2)//(10000.0*2)//(100000.0*2)
printf("spike frequency = %lf \n",a)
savSpike.close()
